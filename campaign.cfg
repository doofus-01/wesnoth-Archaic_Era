# wmllint: no translatables

# required includes to have units work in campaign
# by using this file, internal structure of era can be changed
# without breaking compatibility with campaigns

#ifndef MULTIPLAYER
[binary_path]
    path=data/add-ons/Archaic_Era/
[/binary_path]

{~add-ons/Archaic_Era/mainline-strings.cfg}
{~add-ons/Archaic_Era/utils}
#    {~add-ons/Archaic_Era/theme.cfg}
[+units]
    {~add-ons/Archaic_Era/units/orcs_race.cfg}
    {~add-ons/Archaic_Era/units/phantom_race.cfg}
    {~add-ons/Archaic_Era/units/despair_race.cfg}
    {~add-ons/Archaic_Era/units/menagerie_race.cfg}
    {~add-ons/Archaic_Era/units/primeval_race.cfg}
    {~add-ons/Archaic_Era/units/khthon_race.cfg}
    {~add-ons/Archaic_Era/units/ukians_race.cfg}
    {~add-ons/Archaic_Era/units/south-seas_race.cfg}
[/units]
#else
# in multiplayercampaigns, this era's units and binary_path are known to all add-ons (in difference to the macros)
# only if you use [advancefrom] or extra_defines= for custom units it may (or may not) be needed to read that unit(s) again
{~add-ons/Archaic_Era/mainline-strings.cfg}
{~add-ons/Archaic_Era/utils}
#    {~add-ons/Archaic_Era/theme.cfg}
#endif
