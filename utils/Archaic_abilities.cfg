#textdomain wesnoth-Archaic_Era

# this does not work...  sorry translators
# #define ARCHAIC_UNPLAGUEABLE_DESCRIPTION
#        description="Is unplagueable"#enddef

########## Traits    ####################

#define ARCHAIC_TRAIT_PHANTOM
    # Units with trait Phantom cannot be drained, poisoned or plagued.  This is just cosmetic <- no it's not, but is 'not_living' being deprecated?  It's not in mainline anymore
    [trait]
        id=aa_phantom
        availability="musthave"
        male_name= _ "phantom"
        female_name= _ "female^phantom"
        description={STR_NONLIVING_DESCRIPTION}
        [effect]
            apply_to=status
            add=not_living
        [/effect]
    [/trait]
#enddef

#define ARCHAIC_TRAIT_DEVOUT
    # Units with trait Devout get a +2 increment in hitpoints, and increase in arcane resistance, and are unplageable
    [trait]
        id=aa_devout
        male_name= _ "devout"
        female_name= _ "female^devout"
        description=_"Is unplageable and has 10% better arcane resistance."
        [effect]
            apply_to=resistance
            replace=no
            [resistance]
                arcane=-10
            [/resistance]
        [/effect]
        [effect]
            apply_to=status
            add=unplagueable
        [/effect]
        [effect]
            apply_to=hitpoints
            increase_total=2
        [/effect]
        [effect]
            apply_to=hitpoints
            times=per level
            increase_total=1
        [/effect]
    [/trait]
#enddef

# these are mostly just duplicates of defaults, but with unplageable.  This is clunky, but it will have to do for now.
##################################################################
# is this used anymore?
#define ARCHAIC_TRAIT_STRONG2
    [trait]
        id=aa_strong2
        male_name= _ "strong"
        female_name= _ "female^strong"
        #        description=_"Is unplageable,"
        [effect]
            apply_to=attack
            range=melee
            increase_damage=1
        [/effect]
        [effect]
            apply_to=status
            add=unplagueable
        [/effect]
        [effect]
            apply_to=hitpoints
            increase_total=1
        [/effect]
    [/trait]
#enddef

#define ARCHAIC_TRAIT_QUICK2
    [trait]
        id=quick
        male_name= _ "quick"
        female_name= _ "female^quick"
        #        description=_"Is unplageable,"
        #	{ARCHAIC_UNPLAGUEABLE_DESCRIPTION}
        [effect]
            apply_to=movement
            increase=1
        [/effect]
        [effect]
            apply_to=status
            add=unplagueable
        [/effect]
        [effect]
            apply_to=hitpoints
            increase_total=-5%
        [/effect]
    [/trait]
#enddef

#define ARCHAIC_TRAIT_INTELLIGENT2
    [trait]
        # I think it's safe to recyckle trait IDs?
        id=intelligent
        #        id=aa_intelligent2
        male_name= _ "intelligent"
        female_name= _ "female^intelligent"
        #        description=_"Is unplageable,"
        #	{ARCHAIC_UNPLAGUEABLE_DESCRIPTION}
        [effect]
            apply_to=status
            add=unplagueable
        [/effect]
        [effect]
            apply_to=max_experience
            increase=-20%
        [/effect]
    [/trait]
#enddef

# is this used anymore?
#define ARCHAIC_TRAIT_RESILIENT2
    [trait]
        id=aa_resilient2
        male_name= _ "resilient"
        female_name= _ "female^resilient"
        #        description=_"Is unplageable,"
        #	{ARCHAIC_UNPLAGUEABLE_DESCRIPTION}
        [effect]
            apply_to=hitpoints
            increase_total=4
        [/effect]
        [effect]
            apply_to=status
            add=unplagueable
        [/effect]
        [effect]
            apply_to=hitpoints
            times=per level
            increase_total=1
        [/effect]
    [/trait]
#enddef

#define ARCHAIC_TRAIT_FEARLESS2
    [trait]
        id=aa_fearless
        male_name= _ "fearless"
        female_name= _ "female^fearless"
        description= _ "Fights normally during unfavorable times of day/night, and is unplagueable"
        [effect]
            apply_to=status
            add=unplagueable
        [/effect]
        [effect]
            apply_to="fearless"
        [/effect]
    [/trait]
#enddef
##################################################################

#define ARCHAIC_TRAIT_FEARLESS3
    # A clone of fearless + unplageable that would be generated even if random
    # trait generation is not used. This is needed for primevals and lesser_khthon
    [trait]
        id=aa_mh_fearless
        availability="musthave"
        male_name= _ "fearless"
        female_name= _ "female^fearless"
        description= _ "Fights normally during unfavorable times of day/night, and is unplageable"
        [effect]
            apply_to=status
            add=unplagueable
        [/effect]
        [effect]
            apply_to="fearless"
        [/effect]
    [/trait]
#enddef

#define ARCHAIC_TRAIT_QUICK3
    # A (near) clone of quick + unplageable, but is must-have for the primeval velites
    [trait]
        id=quick
        availability="musthave"
        male_name= _ "quick"
        female_name= _ "female^quick"
        #        description= _ ", and is unplageable"
        [effect]
            apply_to=movement
            increase=1
        [/effect]
        [effect]
            apply_to=hitpoints
            increase_total=-5%
        [/effect]
        [effect]
            apply_to=status
            add=unplagueable
        [/effect]
    [/trait]
#enddef

#define ARCHAIC_TRAIT_ZEALOUS
    # Units with trait Loyal have no upkeep.
    [trait]
        id=aa_zealous
        male_name= _ "zealous"
        female_name= _ "female^zealous"
        description={STR_ZERO_UPKEEP}+_" and is unplagueable"
        [effect]
            apply_to=loyal
        [/effect]
        [effect]
            apply_to=max_experience
            increase=30%
        [/effect]
        [effect]
            apply_to=status
            add=unplagueable
        [/effect]
        [effect]
            apply_to=attack
            range=melee
            increase_damage=1
        [/effect]
    [/trait]
#enddef

# #undef ARCHAIC_UNPLAGUEABLE_DESCRIPTION

########## Abilities ####################

#define ARCHAIC_WEAPON_SPECIAL_EMBALM
    [plague]
        id=ae_embalm
        name= _ "embalm"
        description= _ "When a unit is killed by an embalm attack, that unit is replaced with a mummy of the attacker's side."
        type=Tomb Mummy
    [/plague]
#enddef

# this is lame, it should be changed...
#define ARCHAIC_ABILITY_DANCER
    # Canned definition of Dancer ability to be included in an
    # [abilities] clause.
    [resistance]
        id=aa_dance
        multiply=2
        max_value=60
        # applies to any type if we leave it out, so don't leave it out
        apply_to=blade,pierce,impact
        [filter_base_value]
            greater_than=0
            less_than=60
        [/filter_base_value]
        name= _ "dancer"
        female_name= _ "female^dancer"
        description= _ "Dancer:
This unit's physical (pierce, impact, blade) resistances are doubled, up to a maximum of 60%, when attacking because the enemy cannot get a direct hit."
        affect_self=yes
        active_on=offense
    [/resistance]
#enddef

#define ARCHAIC_ABILITY_DOG_TRAINER AMT
    [leadership]
        id=leadership
        value={AMT}
        cumulative=no
        name= _ "dog trainer"
        female_name= _ "female^dog trainer"
        description= _ "This unit can lead Ukian Dogs that are next to it, making them fight better."
        affect_self=no
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                race="ukiandog"
            [/filter]
        [/affect_adjacent]
    [/leadership]
#enddef

#define NOTE_DOG_TRAINER
    [special_note]
        note=_"This unit effectively provides leadership to Ukian Dogs that are next to it."
    [/special_note]
#enddef

#define ARCHAIC_ABILITY_TRINKETS
    # Canned definition of the heal+amt ability to be included in an [abilities] clause.
    [heals]
        #        value=0
        id=aa_trinkets
        affect_allies=no
        name= _ "anti-poison"
        female_name= _ "female^anti-poison"
        description=  _ "Allows the unit to avoid the effects of poison, but the poisoned unit cannot be cured of its poison by this ability, and must seek the care of a village or a unit that can cure."
        affect_self=yes
        poison=slowed
        #        [affect_adjacent]
        #            adjacent=n,ne,se,s,sw,nw
        #        [/affect_adjacent]
    [/heals]
#enddef

#define ARCHAIC_ABILITY_HEALS AMT
    # Canned definition of the heal+amt ability to be included in an [abilities] clause.
    [heals]
        value={AMT}
        id=aa_healing
        affect_allies=yes
        name= _ "heals +"+"{AMT}"
        female_name= _ "female^heals +"+"{AMT}"
        description=  _ "Allows the unit to heal adjacent allied units at the beginning of our turn.

A unit cared for by this healer may heal up to {AMT} HP per turn, or stop poison from taking effect for that turn.
A poisoned unit cannot be cured of its poison by a healer, and must seek the care of a village or a unit that can cure."
        affect_self=no
        poison=slowed
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
        [/affect_adjacent]
    [/heals]
#enddef

#define ARCHAIC_ABILITY_CURES AMT
    # Canned definition of the heal+amt ability to be included in an [abilities] clause.
    [heals]
        value={AMT}
        id=aa_healing_{AMT}
        affect_allies=yes
        name= _ "heals +"+"{AMT}"+", cures"
        female_name= _ "female^heals +"+"{AMT}"+", cures"
        description=  _ "Allows the unit to heal adjacent allied units at the beginning of our turn.

A unit cared for by this healer may heal up to {AMT} HP per turn, or cure poison."
        affect_self=no
        poison=cured
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
        [/affect_adjacent]
    [/heals]
#enddef

#define ARCHAIC_ABILITY_IMMORTAL
    # Canned definition of Immortal ability to be included in an
    # [abilities] clause.
    [regenerate]
        value=99
        id=aa_immortal
        name= _ "immortal"
        female_name= _ "female^immortal"
        description= _ "This unit heals 99 HP per turn.  If poisoned, it will remove the poison."
        affect_self=yes
        poison=cured
    [/regenerate]
#enddef

#define NOTE_IMMORTAL
    [special_note]
        note=_"This unit regenerates very quickly."
    [/special_note]
#enddef

#define ARCHAIC_ABILITY_INTANGIBLE
    [dummy]
        id=aa_intangible
        name= _ "intangible"
        female_name= _ "female^intangible"
        description=_ "This unit uses only one movement point per attack, rather than all of its movement points like most other units."
    [/dummy]
#enddef

#define NOTE_INTANGIBLE
    [special_note]
        note=_"This unit uses only one movement point per attack, not all movement."
    [/special_note]
#enddef

#define ARCHAIC_ABILITY_AQUALUNG
    [hides]
        id=aa_aqualung
        name=_"aqualung"
        female_name=_"female^aqualung"
        description=_"This unit can move underwater, unobserved by opponents, in either deep water or swamps.  While they can move under shallow water too, there is no way to hide, so they are visible to opponents."
        affect_self=yes
        [filter_self]
            [filter_location]
                terrain=Ss*^*,Sm*^*,Chs*^*,Khs*^*,Wo*^*
            [/filter_location]
        [/filter_self]
    [/hides]
#enddef

#define ARCHAIC_WEAPON_SPECIAL_AGGRESSION
    [berserk]
        id=aggression
        name= _ "aggression"
        description= _ "This attack presses the engagement twice as long as usual."
        value=2
    [/berserk]
#enddef

#define ARCHAIC_WEAPON_SPECIAL_FOG
    [damage]
        id=aa_fog
        name=_"mind fog"
        description=_"A cloud of distraction and mental haze causes the opponent's magical attacks to become enfeebled."
        divide=2
        apply_to=opponent
        [filter_opponent]
            [filter_weapon]
                special_id=magical
            [/filter_weapon]
        [/filter_opponent]
    [/damage]
#enddef

#define ARCHAIC_WEAPON_SPECIAL_FOG_old
    [chance_to_hit]
        id=aa_fog
        name= _"mind fog"
        description= _ "This attack always has a 70% chance to hit regardless of the defensive ability of the unit being attacked.
The opponent is enveloped in an opaque fog and cannot see very well, so their ability to cast the spell, and hence their chance to hit, is reduced."
        value=70
        cumulative=no
        apply_to=self
    [/chance_to_hit]
#enddef

#define ARCHAIC_FOG_CHANCE_TO_HIT
#enddef

#define ARCHAIC_FOG_CHANCE_TO_HIT_old

    [event]
        name=attack
        first_time_only=no

        [filter_attack]
            special_id=aa_fog
        [/filter_attack]
        [filter_second_attack]
            special_id=magical
        [/filter_second_attack]

        [fire_event]
            name=aa_fog_event
            [primary_unit]
                id=$second_unit.id
            [/primary_unit]
        [/fire_event]
    [/event]
    [event]
        name=attack
        first_time_only=no

        [filter_attack]
            special_id=magical
        [/filter_attack]
        [filter_second_attack]
            special_id=aa_fog
        [/filter_second_attack]

        [fire_event]
            name=aa_fog_event
            [primary_unit]
                id=$unit.id
            [/primary_unit]
        [/fire_event]
    [/event]

    [event]
        name=aa_fog_event
        first_time_only=no
        # lifted from mainline FORCE_CHANCE_TO_HIT macro, maybe some of this is not necessary

        {FOREACH unit.attack i}
            [if]
                #This is to mute a warning message about retrieving a member of non-existant wml container.
                [variable]
                    name=unit.attack[$i].specials.length
                    greater_than=0
                [/variable]

                [variable]
                    name=unit.attack[$i].specials.chance_to_hit.length
                    greater_than=0
                [/variable]

                [then]
                    [set_variables]
                        name=unit.attack[$i].specials.original_chance_to_hit
                        to_variable=unit.attack[$i].specials.chance_to_hit
                    [/set_variables]

                    {CLEAR_VARIABLE unit.attack[$i].specials.chance_to_hit}
                [/then]
            [/if]

            [set_variables]
                name=unit.attack[$i].specials.chance_to_hit

                [value]
                    id=forced_cth
                    value=20
                    cumulative=no
                [/value]
            [/set_variables]
        {NEXT i}

        # to make sure it works on both attacker & defender
        [set_variable]
            name=fog_unit_id
            value=$unit.id
        [/set_variable]

        [unstore_unit]
            variable=unit
            find_vacant=no
            text=_"Mind Fogged"
            red,green,blue=45,120,200
        [/unstore_unit]

        [event]
            name=attack end
            delayed_variable_substitution=yes

            [store_unit]
                [filter]
                    id=$fog_unit_id
                [/filter]
                variable=f_unit
                kill=no
            [/store_unit]
            {FOREACH f_unit.attack i}
                {CLEAR_VARIABLE f_unit.attack[$i].specials.chance_to_hit}

                [set_variables]
                    name=f_unit.attack[$i].specials.chance_to_hit
                    to_variable=f_unit.attack[$i].specials.original_chance_to_hit
                [/set_variables]

                {CLEAR_VARIABLE f_unit.attack[$i].specials.original_chance_to_hit}
            {NEXT i}

            [unstore_unit]
                variable=f_unit
                find_vacant=no
            [/unstore_unit]
            {CLEAR_VARIABLE f_unit}
            {CLEAR_VARIABLE fog_unit_id}
        [/event]
    [/event]
#enddef

#define ARCHAIC_WEAPON_SPECIAL_TIE
    [chance_to_hit]
        id=aa_tie
        name= _ "wind-up"
        description= _ "The unit has a greater chance of landing a successful blow if the enemy is distracted.  Similar to Thief's backstab, but affects chance to hit instead of damage."
        value=80
        cumulative=no
        active_on=offense
        [filter_opponent]
            formula="
                enemy_of(self, flanker) and not flanker.petrified
            where
                flanker = unit_at(direction_from(loc, other.facing))
            "
        [/filter_opponent]
        #        backstab=yes
    [/chance_to_hit]
    [slows]
        id=slow
        name= _ "slows"
        description= _ "This attack slows the target until it ends a turn. Slow halves the damage caused by attacks and the movement cost for a slowed unit is doubled. A unit that is slowed will feature a snail icon in its sidebar information when it is selected."
    [/slows]
#enddef

#define ARCHAIC_ABILITY_HEALSELF AMT
    # Canned definition to be included in an
    # [abilities] clause.  Crappier version of mainline ABILITY_REGENERATES
    [regenerate]
        value={AMT}
        id=aa_selfheal
        name= _ "self-heal ("+{AMT}+")"
        description= _ "This unit heals {AMT} HP per turn.  If poisoned, it will remove the poison."
        affect_self=yes
        poison=cured
    [/regenerate]
#enddef

#define ARCHAIC_ABILITY_DUMMYKHEAL
    # Placeholder dummy trait for khthon to be shown in help files
    [dummy]
        id=aa_khthon_heal
        name= _ "khthon self-heal"
        description= _ "All Khthon heal and regenerate, but the precise effect depends upon the unit level."
    [/dummy]
#enddef

#define ARCHAIC_ABILITY_SELFHEAL
    {ARCHAIC_ABILITY_HEALSELF 4}
#enddef

#define ARCHAIC_ABILITY_PENUMBRA
    [illuminates]
        id=aa_penumbra
        value=-25
        max_value=-25
        cumulative=no
        name= _ "penumbra"
        female_name= _ "female^penumbra"
        description= _ "This unit obscures the surrounding area, making chaotic units fight better, and lawful units fight worse.

Any units adjacent to this unit will fight as if it were dusk when it is day, and as if it were night when it is dusk."
        affect_self=yes
    [/illuminates]
#enddef

#define ARCHAIC_ABILITY_DESERTSTALK
    # Canned definition of the Desert-Stalk ability to be included in an
    # [abilities] clause.
    [hides]
        id=aa_desertstalk
        name= _ "desert-stalk"
        female_name= _ "female^desert-stalk"
        name_inactive= _ "desert-stalk"
        female_name_inactive= _ "female^desert-stalk"
        description= _ "This unit can hide in sand terrain, and remain undetected by its enemies.

Enemy units cannot see this unit while it is on desert terrain, except if they have units next to it. Any enemy unit that first discovers this unit immediately loses all its remaining movement."
        description_inactive= _ "Desert-Stalk:
This unit can hide in sand terrain, and remain undetected by its enemies.

Enemy units cannot see this unit while it is on desert terrain, except if they have units next to it. Any enemy unit that first discovers this unit immediately loses all its remaining movement."
        affect_self=yes
        [filter_self]
            [filter_location]
                terrain=Ds*,Dd*,Hd*,Md*
            [/filter_location]
        [/filter_self]
    [/hides]
#enddef

#define ARCHAIC_WEAPON_SPECIAL_SCATTER
    [chance_to_hit]
        id=aa_scatter
        name= _ "scattershot"
        description= _ "This attack always has at least a 70% chance to hit."
        value=70
        cumulative=yes
        #        active_on=offense
    [/chance_to_hit]
#enddef

#define ARCHAIC_ABILITY_ROCKHIDE
    # Canned definition of the Rockhide ability to be included in an
    # [abilities] clause.
    [hides]
        id=rockhide
        name= _ "rock-hide"
        female_name= _ "female^rock-hide"
        name_inactive= _ "rock-hide"
        female_name_inactive= _ "female^rock-hide"
        description= _ "This unit can hide in rubble, hills, and mountains, remaining undetected by its enemies.

Enemy units cannot see this unit while it is in hills or mountains, except if they have units next to it. Any enemy unit that first discovers this unit immediately loses all its remaining movement."
        description_inactive= _ "This unit can hide in rubble, hills, and mountains, remaining undetected by its enemies.

Enemy units cannot see this unit while it is in hills or mountains, except if they have units next to it. Any enemy unit that first discovers this unit immediately loses all its remaining movement."
        affect_self=yes
        [filter]
            [filter_location]
                terrain=H*,M*,*^Dr,Uh
            [/filter_location]
        [/filter]
    [/hides]
#enddef
