#textdomain wesnoth-Archaic_Era

#define ARCHAIC_WEAPON_SPECIAL_STONEGRIP

    [petrifies]
        id=aa_stonegrip
        name= _ "stone grip"
        description= _ "This attack petrifies the target and the attacker, turning them to stone.  Units that have been petrified may not move or attack.  When the attacker is unpetrified, the victim is freed too."
    [/petrifies]
#enddef

# wmllint: unbalanced-on
#define ARCHAIC_ABILITY_STONE
    # Put this in an [abilities]
    [resistance]
        id=aa_stone
        name= _ "stone"
        female_name= _ "female^stone"
        description=_ "This unit is stone in the daylight, if not next to an allied unit with the same ability or if not in a village at turn start, but is always mobile at night.  While mobile, the unit is still stone-hardened if it is merely defending, raising its defenses against kinetic attacks."
        add=20
        apply_to=blade,pierce,impact
        #        multiply=2
        max_value=90
        # applies to any type if we leave it out
        #apply_to=blade,pierce,impact,fire,cold,arcane
        #        [filter_base_value]
        #            greater_than=0
        #            less_than=50
        #        [/filter_base_value]
        affect_self=yes
        active_on=defense
    [/resistance]
    # wmlxgettext: [abilities]
[/abilities]

# 20160515 - changing the logic of this so that statue unit is unpetrified at turn start if chaotic TOD or if in village.  Becomes petrified if not chaotic TOD or it hits enemy with stone-grip.
# Petrified enemies become unpetrified when neighboring statue becomes unpetrified.

[event]
    name=new turn
    first_time_only=no
    id=aa_stone_day
    [store_unit]
        [filter]
            ability=aa_stone
            [filter_location]
                time_of_day=lawful
            [/filter_location]
            [not]
                [filter_adjacent]
                    is_enemy=no
                    ability=aa_stone
                [/filter_adjacent]
                [or]
                    [filter_location]
                        [filter_owner]
                            # this should default to all sides?
                        [/filter_owner]
                    [/filter_location]
                [/or]
            [/not]
        [/filter]
        variable=become_stone_TEMP
        kill=no
    [/store_unit]
    {FOREACH become_stone_TEMP i}
        #	[message]
        #	speaker=narrator
        #	message="$become_stone_TEMP[$i].name"
        #	[/message]
        [set_variable]
            name=become_stone_TEMP[$i].status.petrified
            value=yes
        [/set_variable]
        [unstore_unit]
            variable=become_stone_TEMP[$i]
            find_vacant=no
        [/unstore_unit]
    {NEXT i}
    {CLEAR_VARIABLE become_stone_TEMP}
[/event]

[event]
    name=side turn
    first_time_only=no
    id=aa_stone_night
    [store_unit]
        [filter]
            side=$side_number
            ability=aa_stone
            [and]
                [filter_location]
                    time_of_day=chaotic
                [/filter_location]
                [or]
                    [filter_adjacent]
                        ability=aa_stone
                    [/filter_adjacent]
                [/or]
            [/and]
        [/filter]
        kill=no
        variable=unstone_temp
    [/store_unit]
    {FOREACH unstone_temp i}
        #	[message]
        #	speaker=narrator
        #	message="$unstone_temp[$i].name"
        #	[/message]
        [set_variable]
            name=unstone_temp[$i].status.petrified
            value=no
        [/set_variable]
        [unstore_unit]
            variable=unstone_temp[$i]
            find_vacant=no
        [/unstore_unit]
        # does this cover every case?
        [unpetrify]
            [filter_adjacent]
                [and]
                    is_enemy=no
                    id=$unstone_temp[$i].id
                [/and]
            [/filter_adjacent]
        [/unpetrify]
    {NEXT i}
    {CLEAR_VARIABLE unstone_temp}
[/event]

[event]
    name=attacker_hits
    first_time_only=no
    id=aa_stone_attack
    [filter_attack]
        name=stone_hand
    [/filter_attack]
    [petrify]
        id=$unit.id
    [/petrify]
[/event]

# is advancing an issue?  Petrify the statue that advances, if it doesn't need to be petrified, it will be freed next turn
# this is not optimal, but status of adjacent enemies cannot be filtered simply (can be done w/ Lua, might fix later).
# 20200621 - I no longer remember what this is supposed to fix, commenting it out
# [event]
#    name=post_advance
#    first_time_only=no
#     id=aa_stone_repetrify_advance
#     [filter]
#        has_weapon=stone_hand
#	[filter_adjacent]
#	    is_enemy=yes
#	[/filter_adjacent]
#    [/filter]
#    {VARIABLE unit.status.petrified yes}
#    [unstore_unit]
#        variable=unit
#        find_vacant=no
#    [/unstore_unit]
# [/event]

[+abilities]
    # wmlxgettext: [/abilities]
#enddef
# wmllint: unbalanced-off

# can be deleted?
#define ARCHAIC_STONE_EVENTS

#enddef
