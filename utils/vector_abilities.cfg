#textdomain wesnoth-Archaic_Era

# a hack to negate the overzealous optimization that removes empty tags in units starting BfW 1.13.8

#define ARCHAIC_DUMMY_STATUS

    [event]
        name=prestart
        id=prestart_dummy_status
        [store_unit]
            [filter]
                [not]
                    [filter_wml]
                        [status]
                            dummy=yes
                        [/status]
                    [/filter_wml]
                [/not]
            [/filter]
            variable=init_stat
            kill=no
        [/store_unit]
        {FOREACH init_stat iis}
            [set_variable]
                name=init_stat[$iis].status.dummy
                value=yes
            [/set_variable]
            [set_variable]
                name=init_stat[$iis].variables.dummy
                value=yes
            [/set_variable]
            [unstore_unit]
                variable=init_stat[$iis]
                find_vacant=no
            [/unstore_unit]
        {NEXT iis}
        {CLEAR_VARIABLE init_stat}
    [/event]

    [event]
        name=moveto
        id=moveto_dummy_status
        first_time_only=no
        [filter]
            [not]
                [filter_wml]
                    [status]
                        dummy=yes
                    [/status]
                [/filter_wml]
            [/not]
        [/filter]
        [store_unit]
            [filter]
                id=$unit.id
            [/filter]
            variable=init_stat
            kill=no
        [/store_unit]
        {FOREACH init_stat iis}
            [set_variable]
                name=init_stat[$iis].status.dummy
                value=yes
            [/set_variable]
            [set_variable]
                name=init_stat[$iis].variables.dummy
                value=yes
            [/set_variable]
            [unstore_unit]
                variable=init_stat[$iis]
                find_vacant=no
            [/unstore_unit]
        {NEXT iis}
        {CLEAR_VARIABLE init_stat}
    [/event]
#enddef

#########################################
## Khthon things
#############################

# 2011-09-05: I am changing this to reflect the thrall idea.
#define ARCHAIC_KHTHONIZED FILTER
    # These MODIFY_UNIT things will not persist.  What to do...
    #    {MODIFY_UNIT {FILTER} advances_to null} # does this solve the thrall advancement issue? No, it cannot be changed, it seems.
    # just going to make max_experience something ridiculous (UPDATE 20170812: may have found a work-around, see below)
    {MODIFY_UNIT {FILTER} race thrall_khthon}
    {MODIFY_UNIT {FILTER} alignment chaotic}
    {MODIFY_UNIT {FILTER} name ()}
    # this only affects one unit...  fix this!  Fixed.
    # (2022-02-25 - Yikes! Over a decade.)  Maybe this isn't fixed.  The FOREACH thing doesn't work anymore, if it ever did, replacing with [foreach]
    [store_unit]
        [filter]
            {FILTER}
        [/filter]

        variable=UNIT_store
        kill=no
    [/store_unit]

#    {FOREACH UNIT_store i}
     [foreach]
        array=UNIT_store
        [do]
#        [set_variable]
#            name=UNIT_id
#            value=$|UNIT_store[$|i].id
#        [/set_variable]

        [object]
            silent=yes
            duration=forever
            [filter]
#                id=$|UNIT_id
                id=$this_item.id
            [/filter]
            [effect]
                apply_to=attack
                range=melee
                increase_damage=20%
            [/effect]
            [effect]
                apply_to=attack
                range=ranged
                increase_damage=20%
            [/effect]
            [effect]
                apply_to=resistance
                replace=false
                [resistance]
                    cold=-30
                [/resistance]
            [/effect]
            [effect]
                apply_to=hitpoints
                increase_total=-25%
                heal_full=yes
            [/effect]
            ###################################################
            # 20170812: trying a different method to remove advancments
            # it seems removing all the advancements removes the XP bar.  This is good, but will it be changed?
            #            [effect]
            #                apply_to=max_experience
            #                increase=999
            #            [/effect]
            [effect]
                apply_to=new_advancement
                replace=yes
                types=Peasant
            [/effect]
            [effect]
                apply_to=remove_advancement
                types=Peasant
            [/effect]
            [effect]
                apply_to=new_advancement
                replace=yes
                [advancement]
                    id=thrall_dummy
                [/advancement]
            [/effect]
            [effect]
                apply_to=remove_advancement
                amlas=thrall_dummy
            [/effect]
            ######################################################
            [effect]
                apply_to=profile
                description=_"This unit has been enthralled to the Khthon.  It is still alive, so it is still vulnerable to poison and plague, but does not have a mind of its own anymore and cannot advance."
            [/effect]
            [effect]
                apply_to=resistance
                replace=false
                [resistance]
                    arcane=50
                [/resistance]
            [/effect]
            [effect]
                apply_to=image_mod
                replace="CS(-100,-25,-22)"
            [/effect]
        [/object]
        # because full_heal in one of the effects above does not always work
#        [heal_unit]
#            [filter]
#                id=$UNIT_id
#            [/filter]
#            amount=full
#        [/heal_unit]
        [redraw][/redraw]
#        {CLEAR_VARIABLE UNIT_id}
        [/do]
    [/foreach]        
#    {NEXT i}
    {CLEAR_VARIABLE UNIT_store}

#enddef

#define ARCHAIC_KHTHON_RECRUITS FILTER

    [event]
        name=prerecruit
        first_time_only=no
        [filter]
            {FILTER}
        [/filter]
        {ARCHAIC_KHTHONIZED (x,y=$x1,$y1)}
    [/event]

    # I think this was firing too often, adding the [not] tag
    # 20140921 - aaaand the [not] is not working, or rather is insufficient for excluding converted khthon
    # if the advancements can be removed, this event is unnecessary <- seems they cannot, but making max_experience 999 should be good enough
    #    [event]
    #        name=post_advance
    #        first_time_only=no
    #        [filter]
    #            {FILTER}
    #	    [not]
    #		race=khthon
    #	    [/not]
    #        [/filter]
    #        {ARCHAIC_KHTHONIZED (x,y=$x1,$y1)}
    #    [/event]

#enddef

#define ARCHAIC_WEAPON_SPECIAL_VECTOR_old
    # ability to be placed in [specials] clause, which allows dying khthon to take over its enemy, but most of the WML is in ARCHAIC_VECTOR_EVENTS
    [attacks] # maybe change this to [disable]?
        id=aa_vector_damage
        name= _ "vector"
        description= _ "Upon successful strike, opponent becomes khthon, this unit dies."
        description_inactive= _ "This attack is only available if the unit is near death."
        add=1
        #                    [filter_adjacent]
        # not sure how to set this up with [or] conditions for enemy placement.  try to fix this later.
        #                        adjacent=n,s
        #                        count=2-6
        #                        is_enemy=yes
        #                    [/filter_adjacent]
        # this is a hack, but I don't see how else to do it.
        [filter_self]
            [filter_wml]
                [variables]
                    wounded=yes
                [/variables]
            [/filter_wml]
        [/filter_self]
    [/attacks]
#enddef

#define ARCHAIC_WEAPON_SPECIAL_VECTOR
    # ability to be placed in [specials] clause, which allows dying khthon to take over its enemy, but most of the WML is in ARCHAIC_VECTOR_EVENTS
    [disable]
        id=aa_vector_damage
        name= _ "vector"
        description_inactive= _ "Upon successful strike, opponent becomes khthon, this unit dies."
        description= _ "This attack is only available if the unit is near death."
        #                    [filter_adjacent]
        # not sure how to set this up with [or] conditions for enemy placement.  try to fix this later.
        #                        adjacent=n,s
        #                        count=2-6
        #                        is_enemy=yes
        #                    [/filter_adjacent]
        # this is a hack, but I don't see how else to do it.
        [filter_self]
            [not]
                [filter_wml]
                    [variables]
                        wounded=yes
                    [/variables]
                [/filter_wml]
            [/not]
        [/filter_self]
    [/disable]
#enddef

#define ARCHAIC_WEAPON_VECTOR
    name=khthon_vector
    description= _ "vector"
    type=arcane
    range=ranged
    damage=1
    number=1
    icon=attacks/magic-missile.png
    #    defense_weight=0
    #    attack_weight=2.0
    [specials]
        {ARCHAIC_WEAPON_SPECIAL_VECTOR}
    [/specials]
#enddef

#ifdef __UNUSED__
# define ARCHAIC_WEAPON_VECTOR DAMAGE NUMBER CHANCE
[attack]
    {ARCHAIC_WEAPON_VECTOR_NB {DAMAGE} {NUMBER} {CHANCE}}
[/attack]
[attack_anim]
    [filter_attack]
        name=khthon_vector
    [/filter_attack]
    start_time=-500
    blend_color=50,190,220
    blend_ratio=0~0.3:150,0.3~0.6:150,0.6~1:150,1~0.3:150,0.3~0.0:75
    {MISSILE_FRAME_FAERIE_FIRE}
[/attack_anim]
# enddef
# define ARCHAIC_WEAPON_VECTOR_1
{ARCHAIC_WEAPON_VECTOR 9 1 15}
# enddef
# define ARCHAIC_WEAPON_VECTOR_2
{ARCHAIC_WEAPON_VECTOR 16 1 25}
# enddef
# define ARCHAIC_WEAPON_VECTOR_2p5
{ARCHAIC_WEAPON_VECTOR 12 2 25}
# enddef
# define ARCHAIC_WEAPON_VECTOR_3
{ARCHAIC_WEAPON_VECTOR 22 1 30}
# enddef
# define ARCHAIC_WEAPON_VECTOR_4
{ARCHAIC_WEAPON_VECTOR 30 1 35}
# enddef
# define ARCHAIC_WEAPON_VECTOR_5
{ARCHAIC_WEAPON_VECTOR 40 1 40}
# enddef
#endif

#define ARCHAIC_NO_STRIKE_LIST
type="Terrapin_Hiding,Snapper_Hiding,Tortoise_Hiding,Rock Snapper_Hiding,Rockback_Hiding,Adamantine_Hiding"#enddef

#define ARCHAIC_TRAIT_ENTHRALL
    [trait]
        id=aa_khthon_enthrall
        availability=musthave
        name= _"netherworld spirit" # this is pretty stupid and should be changed
        description= _ "Essential Khthon traits:  immune to plagues and has vector attack"
        #        description= _ "Essential Khthon traits:  immune to plagues and has enthrallment and vector attacks"
        [effect]
            apply_to=status
            add=unplagueable
        [/effect]
        [effect] # wolves
            [filter]
                has_weapon=fangs
                [not]
                    has_weapon=aa_khthon_enthrall_attack
                [/not]
            [/filter]
            apply_to=new_attack
            range=melee
            name=aa_khthon_enthrall_attack
            description= _ "green-fire fangs"
            type=arcane
            damage=2
            number=4
            icon=attacks/fangs.png~CS(-25,0,50)~BLIT(attacks/empty-frame.png)
        [/effect]
        [effect] # yaks
            [filter]
                has_weapon=horns
                [not]
                    has_weapon=aa_khthon_enthrall_attack
                [/not]
            [/filter]
            apply_to=new_attack
            range=melee
            name=aa_khthon_enthrall_attack
            description= _ "green-fire horns"
            type=arcane
            damage=7
            number=2
            #	    accuracy=5
            #	    parry=10
            icon=attacks/BMRhorns.png~CS(-25,0,50)~BLIT(attacks/empty-frame.png)
        [/effect]
        [effect]
            [filter]
                has_weapon=head
                [not]
                    has_weapon=aa_khthon_enthrall_attack
                [/not]
            [/filter]
            apply_to=new_attack
            range=melee
            name=aa_khthon_enthrall_attack
            description= _ "green-fire ram"
            type=arcane
            damage=6
            number=2
            [specials]
                {WEAPON_SPECIAL_CHARGE}
            [/specials]
            #	    accuracy=5
            #	    parry=10
            icon=attacks/ram.png~CS(-25,0,50)~BLIT(attacks/empty-frame.png)
        [/effect]
        [effect]
            [filter]
                has_weapon=beak
                [not]
                    has_weapon=aa_khthon_enthrall_attack
                [/not]
            [/filter]
            apply_to=new_attack
            range=melee
            name=aa_khthon_enthrall_attack
            description= _ "green-fire bite"
            type=arcane
            damage=3
            number=3
            #	    accuracy=5
            #	    parry=10
            icon=attacks/BMRbeak_duck.png~CS(-25,0,50)~BLIT(attacks/empty-frame.png)
        [/effect]
        [effect]
            [filter]
                has_weapon=bite
                [not]
                    {ARCHAIC_NO_STRIKE_LIST}
                [/not]
                [not]
                    has_weapon=aa_khthon_enthrall_attack
                [/not]
            [/filter]
            apply_to=new_attack
            range=melee
            name=aa_khthon_enthrall_attack
            description= _ "green-fire bite"
            type=arcane
            damage=3
            number=3
            #	    accuracy=10
            #	    parry=15
            icon=attacks/BMRbeak_turtle.png~CS(-25,0,50)~BLIT(attacks/empty-frame.png)
        [/effect]
        [effect]
            [filter]
                has_weapon=spit
                [not]
                    has_weapon=aa_khthon_enthrall_attack
                [/not]
            [/filter]
            apply_to=new_attack
            range=melee
            name=aa_khthon_enthrall_attack
            description= _ "green-fire lick"
            type=arcane
            damage=4
            number=2
            #	    accuracy=10
            #	    parry=20
            icon=attacks/waterspray.png~CS(-25,0,50)~BLIT(attacks/empty-frame.png)
        [/effect]
        [effect]
            [filter]
                has_weapon=kick
                [not]
                    has_weapon=aa_khthon_enthrall_attack
                [/not]
            [/filter]
            apply_to=new_attack
            range=melee
            name=aa_khthon_enthrall_attack
            description= _ "green-fire kick"
            type=arcane
            damage=5
            number=2
            #	    accuracy=10
            #	    parry=20
            icon=attacks/BMRhoof.png~CS(-25,0,50)~BLIT(attacks/empty-frame.png)
        [/effect]
        [effect]
            [filter]
                has_weapon=slash
                [not]
                    has_weapon=aa_khthon_enthrall_attack
                [/not]
            [/filter]
            apply_to=new_attack
            range=melee
            name=aa_khthon_enthrall_attack
            description= _ "green-fire slash"
            type=arcane
            damage=5
            number=3
            #	    accuracy=10
            #	    parry=20
            icon=attacks/BMRhoof-slash.png~CS(-25,0,50)~BLIT(attacks/empty-frame.png)
        [/effect]
        [effect]
            [filter]
                has_weapon=pincers
                [not]
                    has_weapon=aa_khthon_enthrall_attack
                [/not]
            [/filter]
            apply_to=new_attack
            range=melee
            name=aa_khthon_enthrall_attack
            description= _ "green-fire pincers"
            type=arcane
            damage=10
            number=4
            #	    accuracy=10
            #	    parry=20
            icon=attacks/pincers.png~CS(-25,0,50)~BLIT(attacks/empty-frame.png)
        [/effect]
        [effect] # anyone we missed
            [filter]
                [not]
                    has_weapon=pincers
                [/not]
                [not]
                    has_weapon=slash
                [/not]
                [not]
                    has_weapon=beak
                [/not]
                [not]
                    has_weapon=fangs
                [/not]
                [not]
                    has_weapon=horns
                [/not]
                [not]
                    has_weapon=head
                [/not]
                [not]
                    has_weapon=bite
                [/not]
                [not]
                    has_weapon=spit
                [/not]
                [not]
                    has_weapon=beak
                [/not]
                [not]
                    has_weapon=kick
                [/not]
                [not]
                    has_weapon=aa_khthon_enthrall_attack
                [/not]
                [not]
                    {ARCHAIC_NO_STRIKE_LIST}
                [/not]
            [/filter]
            apply_to=new_attack
            range=melee
            name=aa_khthon_enthrall_attack
            description= _ "green-fire strike"
            type=arcane
            damage=6
            number=3
            #	    accuracy=10
            #	    parry=20
            icon=attacks/claws.png~CS(-25,0,50)~BLIT(attacks/empty-frame.png)
        [/effect]
        # to get the "enthrallment" label on the sidebar to not be greyed out, we make a dummy companion after this
        [effect]
            [filter]
                [not]
                    level=0
                    [or]
                        level=1
                    [/or]
                [/not]
            [/filter]
            apply_to=attack
            name=aa_khthon_enthrall_attack
            [set_specials]
                mode=append
                [damage]
                    id=aa_k_enth
                    name= _ ""
                    #                    name_inactive= "</span> <span color='#aacc99'>" + _ "enthrallment"
                    name_inactive= _ ""
                    description=""
                    multiply=1.15
                    [filter_opponent]
                        status=unplagueable
                        #                        [not]
                        #                            lua_function="can_be_vectored"
                        #                        [/not]
                    [/filter_opponent]
                    cumulative=yes
                    active_on=offense
                [/damage]
            [/set_specials]
        [/effect]
        [effect]
            [filter]
                [not]
                    level=0
                    [or]
                        level=1
                    [/or]
                [/not]
            [/filter]
            apply_to=attack
            name=aa_khthon_enthrall_attack
            [set_specials]
                mode=append
                [dummy]
                    id=aa_k_enth_dummy
                    name= _ "enthrallment"
                    name_inactive= _ "enthrallment"
                    description= _ "Slain mortal foes become Khthon Thralls, while unplageable foes take more damage."
                [/dummy]
            [/set_specials]
        [/effect]
        # this regenerate ability stuff had been written in Khthon unit_type files, but for dynamically created Khthon, we need it here
        [effect]
            [filter]
                level=1
                [not]
                    ability=aa_selfheal
                    [or]
                        ability=regenerates
                    [/or]
                [/not]
            [/filter]
            apply_to=new_ability
            [abilities]
                [regenerate]
                    value=4
                    id=aa_selfheal
                    name= _ "self-heal (4)"
                    description= _ "This unit heals 4 HP per turn.  If poisoned, it will remove the poison."
                    affect_self=yes
                    poison=cured
                [/regenerate]
            [/abilities]
        [/effect]
        [effect]
            [filter]
                [and]
                    level=2
                    [or]
                        level=3
                    [/or]
                    [or]
                        level=4
                    [/or]
                    [or]
                        level=5
                    [/or]
                [/and]
                [not]
                    ability=regenerates
                [/not]
                [not]
                    ability=aa_immortal
                [/not]
            [/filter]
            apply_to=new_ability
            [abilities]
                {ABILITY_REGENERATES}
            [/abilities]
        [/effect]
        # get rid of dummy ability for help pages
        [effect]
            [filter]
                [and]
                    ability=aa_khthon_heal
                [/and]
            [/filter]
            apply_to=remove_ability
#ifver WESNOTH_VERSION >= 1.17.17
                [filter_ability]
                    id=aa_khthon_heal
                [/filter_ability]
#else
            [abilities]
                [dummy]
                    id=aa_khthon_heal
                [/dummy]
            [/abilities]
#endif
        [/effect]
        [effect]
            [filter]
                has_weapon=aa_khthon_enthrall_attack
            [/filter]
            times="per level"
            apply_to=attack
            name=aa_khthon_enthrall_attack
            increase_damage=2
        [/effect]
        [effect]
            apply_to=new_attack
            {ARCHAIC_WEAPON_VECTOR}
        [/effect]
        [effect]
            apply_to=new_animation
            [attack_anim]
                [filter_attack]
                    name=khthon_vector
                [/filter_attack]
                start_time=-500
                blend_color=50,190,220
                blend_ratio=0~0.3:150,0.3~0.6:150,0.6~1:150,1~0.3:150,0.3~0.0:75
                {MISSILE_FRAME_FAERIE_FIRE}
            [/attack_anim]
        [/effect]
        [effect]
            apply_to=new_animation
            [draw_weapon_anim]
                [filter_attack]
                    name=aa_khthon_enthrall_attack
                [/filter_attack]
                start_time=-200
                halo_start_time=-200
                halo_auto_vflip=false
                [halo_frame]
                    duration=420
                    halo=halo/saurian-magic-halo-[1~7].png~CS(-90,180,-30):60
                    halo_y=0~-60
                    halo_alpha=0.6~0.0
                [/halo_frame]
            [/draw_weapon_anim]
        [/effect]
        [effect]
            apply_to=new_animation
            [attack_anim]
                [filter_attack]
                    name=aa_khthon_enthrall_attack
                [/filter_attack]
                start_time=-200
                blend_color=120,240,170
                blend_ratio=0~0.8:200,0.7~0.0:200:
                offset="0~0.6:200,0.6~0:200"
                ball_start_time=-200
                ball_offset="0.1~0.8:200,0.8~0.1:200,0.1:200"
                ball_alpha=0.8
                ball_layer=91
                [ball_frame]
                    duration=600
                    image="projectiles/fire-burst-small-[1~8].png~CS(-125,220,190)"
                    sound=melee-fire.ogg
                [/ball_frame]
            [/attack_anim]
        [/effect]
    [/trait]
#enddef

# this is to handle the objects and status effects, could be incorporated into ARCHAIC_VECTOR_EVENTS at some point, but is now mainly for use in scenarios
#define ARCHAIC_KHTHONIZE_MAJOR FILTER_WML

    [store_unit]
        [filter]
            {FILTER_WML}
        [/filter]
        variable=s_unit
        kill=no
    [/store_unit]

    {FOREACH s_unit s_unit_i}
        [set_variable]
            name=s_unit[$s_unit_i].race
            value=khthon
        [/set_variable]
        [set_variable]
            name=s_unit[$s_unit_i].name
            random="Acarreah,Aehnha,Aggaragatala,Ammona,Atterah,Azzemon,Bahbarshah,Banshee,Beelzeh,Borrommon,Burreon,Charanah,Cleemmon,Condurrah,Dammaron,Desseon,Doombhereh,Echorram,Eunroomon,Grenduram,Gorghallon,Kireon,Lommnusson,Marammon"
        [/set_variable]
        [set_variable]
            name=s_unit[$s_unit_i].alignment
            value=chaotic
        [/set_variable]
        [set_variable]
            name=s_unit[$s_unit_i].hitpoints
            value=$s_unit[$s_unit_i].max_hitpoints
        [/set_variable]
        [unstore_unit]
            variable=s_unit[$s_unit_i]
            find_vacant=no
        [/unstore_unit]
        [object]
            silent=yes
            duration=forever
            [filter]
                id=$s_unit[$s_unit_i].id
            [/filter]
            [effect]
                apply_to=attack
                range=melee
                increase_damage=20%
            [/effect]
            [effect]
                apply_to=resistance
                replace=false
                [resistance]
                    cold=-30
                    arcane=30
                [/resistance]
            [/effect]
            [effect]
                apply_to=max_experience
                increase=10
            [/effect]
            [effect]
                apply_to=halo
                halo=halo/deathglow.png
            [/effect]
            [effect]
                apply_to=profile
                portrait=$s_unit[$s_unit_i].profile|~CS(-120,-70,-80)
            [/effect]
            [effect]
                apply_to=image_mod
                replace="CS(-150,35,15)"
            [/effect]
        [/object]
        [modify_unit]
            [filter]
                id=$s_unit[$s_unit_i].id
            [/filter]
            {ARCHAIC_TRAIT_ENTHRALL}
        [/modify_unit]
    {NEXT s_unit_i}
    {CLEAR_VARIABLE s_unit}
    {CLEAR_VARIABLE s_unit_i}
#enddef

#define ARCHAIC_VECTOR_EVENTS

    # not needed anymore, in BfW 1.13.2
    #    [event]
    #        id=aa_khthon_vector_filter_init
    #        name=preload, start, attack # this may not be adaquate?
    #        first_time_only=no
    #        # this event is used by ENTHRALL stuff as well, but should be OK, since anyone with enthrall should have vector
    #        # using this because we cannot filter on status (in BfW 1.12)
    #        [lua]
    #            code=<<
#		H = wesnoth.require "lua/helper.lua" 
#                function can_be_vectored(unit)
#	          local u_status = H.get_child(unit.__cfg, "status")
#                    if u_status.unplagueable then
#                        return false
#                    else
#                        return true
#                    end
#                end
#            >>
    #        [/lua]
    #    [/event]

    {ARCHAIC_DUMMY_STATUS}

    [event]
        id=aa_khthon_wounded
        name=attack_end
        #        name=attacker_hits
        first_time_only=no
        [filter_second]
            has_weapon=khthon_vector
        [/filter_second]
        [if]
            [variable]
                name=second_unit.hitpoints
                less_than="$($second_unit.max_hitpoints| * 0.15)"
            [/variable]
            [then]
                [set_variable]
                    name=second_unit.variables.wounded
                    value=yes
                [/set_variable]
                [unstore_unit]
                    variable=second_unit
                    find_vacant=no
                [/unstore_unit]
            [/then]
            [else]
                [set_variable]
                    name=second_unit.variables.wounded
                    value=no
                [/set_variable]
                [unstore_unit]
                    variable=second_unit
                    find_vacant=no
                [/unstore_unit]
            [/else]
        [/if]
    [/event]
    [event]
        id=aa_khthon_wounded2
        name=attack_end
        first_time_only=no
        [filter]
            has_weapon=khthon_vector
        [/filter]
        [if]
            [variable]
                name=unit.hitpoints
                less_than="$($unit.max_hitpoints| * 0.15)"
                #                less_than=12
            [/variable]
            [or]
                [variable]
                    name=unit.hitpoints
                    less_than=6
                [/variable]
            [/or]
            [then]
                [set_variable]
                    name=unit.variables.wounded
                    value=yes
                [/set_variable]
                [unstore_unit]
                    variable=unit
                    find_vacant=no
                [/unstore_unit]
            [/then]
            [else]
                [set_variable]
                    name=unit.variables.wounded
                    value=no
                [/set_variable]
                [unstore_unit]
                    variable=unit
                    find_vacant=no
                [/unstore_unit]
            [/else]
        [/if]
    [/event]
    [event]
        id=aa_khthon_wounded_reset
        # the advancing stuff causes conflicts with the advancer_temp stuff, need to improve filtering
        # ... or move this variable reset to other events that already exist.
        # post_advance is now in id=aa_vector_advance2
        # why the moveto?  Will it work to have it in the attack_end events above, and a turn refresh?
        #        name=moveto,post_advance
        # maybe some day we can filter on hitpoints, then all this crap would not be necessary
        name=turn refresh
        #        name=attacker_hits
        first_time_only=no
        #        [allow_undo]
        #        [/allow_undo]
        [filter_condition]
            [have_unit]
                has_weapon=khthon_vector
                side=$side_number|
            [/have_unit]
        [/filter_condition]
        [store_unit]
            [filter]
                has_weapon=khthon_vector
                side=$side_number|
            [/filter]

            variable=MODIFY_UNIT_store
            kill=yes
        [/store_unit]

        {FOREACH MODIFY_UNIT_store MODIFY_UNIT_i}
            [if]
                [variable]
                    name=MODIFY_UNIT_store[$MODIFY_UNIT_i].hitpoints
                    greater_than_equal_to="$($MODIFY_UNIT_store[$MODIFY_UNIT_i].max_hitpoints| * 0.15)"
                    #                greater_than=11
                [/variable]
                [then]
                    [set_variable]
                        name=MODIFY_UNIT_store[$MODIFY_UNIT_i].variables.wounded
                        value=no
                    [/set_variable]
                [/then]
                [else]
                    [set_variable]
                        name=MODIFY_UNIT_store[$MODIFY_UNIT_i].variables.wounded
                        value=yes
                    [/set_variable]
                [/else]
            [/if]

            [unstore_unit]
                variable=MODIFY_UNIT_store[$MODIFY_UNIT_i]
                find_vacant=no
            [/unstore_unit]
        {NEXT MODIFY_UNIT_i}

        {CLEAR_VARIABLE MODIFY_UNIT_store,MODIFY_UNIT_i}
    [/event]

    # a [fire_event] might make this more compact?
    [event]
        id=aa_vector_jump_attack
        name=attacker_hits
        first_time_only=no
        # if only we could filter by status
        # maybe we can use Lua? See [event] at start of this macro
        [filter_second]
            [not]
                canrecruit=yes
            [/not]
            [not]
                status=unplagueable
            [/not]
            #            lua_function="can_be_vectored"
        [/filter_second]
#ifdef __UNUSED__
        [filter_second]
            [not]
                race=tri_mech
            [/not]
            [not]
                race=tri_avatar
            [/not]
            [not]
                race=primeval
            [/not]
            [not]
                race=primevalist_human
            [/not]
            [not]
                race=undead
            [/not]
            [not]
                race=phantom_egypt
            [/not]
            [not]
                race=phantom_spirit
            [/not]
            [not]
                race=despair
            [/not]
            [not]
                race=despair_wisp
            [/not]
            [not]
                race=mechanical
            [/not]
            [not]
                race=khthon
            [/not]
        [/filter_second]
#endif
        [filter_attack]
            name=khthon_vector
        [/filter_attack]
        [set_variable]
            name=second_unit.race
            value=khthon
        [/set_variable]
        [set_variable]
            name=second_unit.side
            value=$unit.side
        [/set_variable]
        [set_variable]
            name=second_unit.name
            value=$unit.name
        [/set_variable]
        [set_variable]
            name=second_unit.alignment
            value=chaotic
        [/set_variable]
        [set_variable]
            name=second_unit.hitpoints
            value=$second_unit.max_hitpoints
        [/set_variable]
        [set_variable]
            name=second_unit.moves
            value=0
        [/set_variable]
        [unstore_unit]
            variable=second_unit
            red,green,blue=0,200,150
            text= _ "possessed"
            find_vacant=no
        [/unstore_unit]
        [object]
            silent=yes
            duration=forever
            [filter]
                x,y=$x2,$y2
            [/filter]
            [effect]
                apply_to=attack
                range=melee
                increase_damage=20%
            [/effect]
            [effect]
                apply_to=resistance
                replace=false
                [resistance]
                    cold=-30
                    arcane=30
                [/resistance]
            [/effect]
            [effect]
                apply_to=max_experience
                increase=10
            [/effect]
            [effect]
                apply_to=halo
                halo=halo/deathglow.png
            [/effect]
            [effect]
                apply_to=image_mod
                replace="CS(-150,35,15)"
            [/effect]
        [/object]
        [modify_unit]
            [filter]
                x,y=$x2,$y2
            [/filter]
            {ARCHAIC_TRAIT_ENTHRALL}
        [/modify_unit]
        [kill]
            x,y=$x1,$y1
            animate=yes
        [/kill]
    [/event]

    [event]
        name=defender_hits
        id=aa_vector_jump_defend
        first_time_only=no
        [filter]
            [not]
                canrecruit=yes
            [/not]
            [not]
                status=unplagueable
            [/not]
            #            lua_function="can_be_vectored"
        [/filter]
#ifdef __UNUSED__
        [filter]
            [not]
                race=tri_mech
            [/not]
            [not]
                race=tri_avatar
            [/not]
            [not]
                race=primeval
            [/not]
            [not]
                race=primevalist_human
            [/not]
            [not]
                race=undead
            [/not]
            [not]
                race=phantom_egypt
            [/not]
            [not]
                race=phantom_spirit
            [/not]
            [not]
                race=despair
            [/not]
            [not]
                race=despair_wisp
            [/not]
            [not]
                race=mechanical
            [/not]
            [not]
                race=khthon
            [/not]
            [not]
                canrecruit=yes
            [/not]
        [/filter]
#endif
        [filter_second_attack]
            name=khthon_vector
        [/filter_second_attack]
        [set_variable]
            name=unit.race
            value=khthon
        [/set_variable]
        [set_variable]
            name=unit.side
            value=$second_unit.side
        [/set_variable]
        [set_variable]
            name=unit.name
            value=$second_unit.name
        [/set_variable]
        [set_variable]
            name=unit.alignment
            value=chaotic
        [/set_variable]
        [set_variable]
            name=unit.hitpoints
            value=$unit.max_hitpoints
        [/set_variable]
        [set_variable]
            name=unit.moves
            value=0
        [/set_variable]
        [unstore_unit]
            variable=unit
            red,green,blue=0,200,150
            text= _ "Possessed"
            find_vacant=no
        [/unstore_unit]
        [object]
            silent=yes
            duration=forever
            [filter]
                x,y=$x1,$y1
            [/filter]
            [effect]
                apply_to=attack
                range=melee
                increase_damage=20%
            [/effect]
            [effect]
                apply_to=resistance
                replace=false
                [resistance]
                    cold=-30
                    arcane=30
                [/resistance]
            [/effect]
            [effect]
                apply_to=max_experience
                increase=10
            [/effect]
            [effect]
                apply_to=halo
                halo=halo/deathglow.png
            [/effect]
            [effect]
                apply_to=image_mod
                replace="CS(-150,35,15)"
            [/effect]
        [/object]
        [modify_unit]
            [filter]
                x,y=$x1,$y1
            [/filter]
            {ARCHAIC_TRAIT_ENTHRALL}
        [/modify_unit]
        [kill]
            x,y=$x2,$y2
            animate=yes
        [/kill]
    [/event]

    [event]
        # this is to make sure the khthon stuff doesn't go away when the unit advances
        # how to not screw up the 'real' khthon?
        id=aa_vector_advance1
        name=advance
        first_time_only=no
        [filter]
            race=khthon
        [/filter]
        # It should be OK to store just this one unit, because the next event should always fire afterward
        [store_unit]
            [filter]
                x,y=$x1,$y1
            [/filter]
            variable=advancer_temp
            kill=no
        [/store_unit]
        #		[message]
        #		speaker=narrator
        #		message="advance - $advancer_temp.race|"
        #		[/message]
    [/event]

    [event]
        name=post_advance
        id=aa_vector_advance2
        first_time_only=no
        # it must be that if $advancer_temp is empty, this ALWAYS passes?
        [filter]
            id=$advancer_temp.id
        [/filter]
        # 20160903 - does this fix things? - seems to fix the false positive above, but do the Khthon still advance correctly?
        [filter_condition]
            [variable]
                name=unit.id
                equals=$advancer_temp.id
            [/variable]
        [/filter_condition]
        [store_unit]
            [filter]
                x,y=$x1,$y1
            [/filter]
            variable=post_advancer_temp
            kill=no
        [/store_unit]
        [if]
            [variable]
                name=post_advancer_temp.race
                equals=$advancer_temp.race
            [/variable]
            [then]
                #		[message]
                #		speaker=narrator
                #		message="post advance - khthon to khthon"
                #		[/message]
            [/then]
            [else]
                #                	[message]
                #                	speaker=narrator
                #                	message="post advance - khthon to $post_advancer_temp.race|"
                #                	[/message]
                [set_variable]
                    name=post_advancer_temp.race
                    value=khthon
                [/set_variable]
                [set_variable]
                    name=post_advancer_temp.alignment
                    value=chaotic
                [/set_variable]
                [set_variable]
                    name=post_advancer_temp.variables.wounded
                    value=no
                [/set_variable]
                [unstore_unit]
                    variable=post_advancer_temp
                    find_vacant=no
                [/unstore_unit]
            [/else]
        [/if]
        {CLEAR_VARIABLE advancer_temp}
        {CLEAR_VARIABLE post_advancer_temp}
    [/event]
#enddef

#define ARCHAIC_ENTHRALL_EVENTS
    [event]
        id=aa_enthrall_event
        name=last breath
        first_time_only=no
        [filter]
            [not]
                canrecruit=yes
            [/not]
            [not]
                status=unplagueable
            [/not]
            #            lua_function="can_be_vectored"
        [/filter]
        [filter_second_attack]
            special_id=aa_k_enth
            # name=aa_khthon_enthrall_attack
            #            race=khthon
        [/filter_second_attack]
        {ARCHAIC_KHTHONIZED (id=$unit.id)}
        [store_unit]
            [filter]
                id=$unit.id
            [/filter]
            variable=thrall_to_be
            kill=no
        [/store_unit]
        [set_variable]
            name=thrall_to_be.side
            value=$second_unit.side
        [/set_variable]
        [set_variable]
            name=thrall_to_be.moves
            value=0
        [/set_variable]
        [set_variable]
            name=thrall_to_be.attacks_left
            value=0
        [/set_variable]
        [set_variable]
            name=thrall_to_be.upkeep
            value=1
        [/set_variable]
        [unstore_unit]
            variable=thrall_to_be
            find_vacant=no
            red,green,blue=240,100,50
            text= _ "enthralled"
        [/unstore_unit]
        {CLEAR_VARIABLE thrall_to_be}
    [/event]
#enddef
